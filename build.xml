<?xml version="1.0" encoding="UTF-8"?>

<project name="adapter_service" default="start" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <!-- PART 1: Ivy properties, download, installation and configuration -->
    <property name="ivy.install.version" value="2.4.0-rc1"/>
    <property name="ivy.jar.dir" value="${basedir}/ivy"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>


    <target name="ivy_check">
        <condition property="ivydir.exists">
            <available file="${ivy.jar.dir}" type="dir"/>
        </condition>
    </target>


    <!-- this targe will download ivy.jar if its inot in the "ivy" folder yet -->
    <target name="download-ivy" depends="ivy_check" unless="ivydir.exists">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <!--
         =================================
                  target: install-ivy
                    this target is not necessary if you put ivy.jar in your ant lib directory
                    if you already have ivy in your ant lib, you can simply remove this
                    target and the dependency the 'init' target has on it
                 =================================
        -->
    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <!--
         try to load ivy here from local ivy dir, in case the user has not already dropped
                      it into ant's lib dir (note that the latter copy will always take precedence).
                      We will not fail as long as local lib dir exists (it may be empty) and
                      ivy is in at least one of ant's lib dir or the local lib dir.
        -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
    <!-- PART 2: General properties definitions -->
    <property name="build.dir" value="build"/>
    <property name="src.dir" value="src"/>
    <property name="lib.dir" value="libs"/>
    <property name="web.dir" value="."/>
    <!-- =================================
          target: resolve downloads the dependencies to your lib folder
         ================================= -->

    <target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy">
        <ivy:retrieve pattern="${lib.dir}/[type]s-[artifact]-[revision].[ext]"/>
    </target>
    <!-- paths where ivy libraries will be downloaded, use them as classpathref in your compilation and running tasks  -->
    <path id="lib.path.id">
        <fileset dir="${lib.dir}"/>
    </path>
    <path id="run.path.id">
        <path refid="lib.path.id"/>
        <fileset dir="${build.dir}">
            <include name="*.class"/>
            <include name="**/*.class"/>
            <exclude name="**/*Test*"/>
        </fileset>
    </path>
    <!-- PART 3: compilation and execution targets for this session -->
    <target name="init" depends="install-ivy, resolve">
        <echo message="Init has been called"/>
        <mkdir dir="${build.dir}"/>
        <echo message="${build.dir} has been created"/>
    </target>

    <target name="clean">
        <echo message="Clean has been called"/>
        <delete dir="${build.dir}"/>
        <echo message="${build.dir} has been deleted"/>
    </target>

    <target name="clean.deps" depends="clean">
        <echo message="Clean.deps has been called"/>
        <delete dir="${lib.dir}"/>
        <echo message="${lib.dir} has been deleted"/>
        <delete dir="${ivy.jar.dir}"/>
        <echo message="${ivy.jar.dir} has been deleted"/>
        <delete file="lifecoach.sqlite"/>
        <echo message="Deleted database file"/>
    </target>

    <target name="install" depends="clean, init">
        <echo message="Compile target has been called"/>
        <echo message="Using java ${ant.java.version}"/>


        <javac srcdir="${src.dir}" destdir="${build.dir}"
               classpathref="lib.path.id" includeAntRuntime="false"
               target="1.7" source="1.7"
               debug="true">
        </javac>
        <copy todir="${build.dir}" overwrite="true">
            <fileset dir="${src.dir}">
                <include name="*.xml"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="start" depends="install">
        <echo message="app start com.unitn.adapter_service.App in ${build.dir}"/>
        <java classname="com.unitn.adapter_service.App" classpath="${build.dir}" fork="true">
            <arg value="$JAVA_OPTS  -cp"/>
            <classpath>
                <path location="build"/>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar"/>
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>
</project>
